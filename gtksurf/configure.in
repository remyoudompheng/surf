dnl ------------------------
dnl configure.in for gtksurf
dnl ------------------------

AC_PREREQ(2.13)
AC_INIT(src/main.cc)
AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(gtksurf, 0.1)
CF_VERBOSE


dnl some standard checks:
dnl ---------------------

AC_PROG_CC
AC_PROG_CXX
AC_AIX
AC_ISC_POSIX
AC_MINIX
AC_HEADER_STDC


dnl check if C++ compiler really works:
dnl -----------------------------------

AC_LANG_SAVE
AC_LANG_CPLUSPLUS

JOJO_CXX_WARNINGS
JOJO_CXX_NAMESPACES
JOJO_CXX_STDNAMESPACE

AC_LANG_RESTORE

if test "$GCC" = "no" ; then
	case `uname` in
	IRIX*)
		CXXFLAGS="-LANG:std $CXXFLAGS"
		;;
	esac
fi



dnl include /usr/local/lib and /usr/local/include in search paths:
dnl --------------------------------------------------------------

if test -d "/usr/local/lib/"; then
	LDFLAGS="-L/usr/local/lib/ $LDFLAGS"
fi
if test -d "/usr/local/include/"; then
	CPPFLAGS="-I/usr/local/include/ $CPPFLAGS"
fi

dnl check for STLport:
dnl ------------------

AC_ARG_WITH(stlport-prefix,[  --with-stlport-prefix=PFX Prefix where STLport is installed (optional)],
            stlport_prefix="$withval", stlport_prefix="")
AC_ARG_ENABLE(stlport, [  --disable-stlport       Do not try to find STLport includes and library],
                    , enable_stlport=yes)

if test "x$enable_stlport" = "xyes" ; then
    AC_MSG_CHECKING(for STLport includes)
    stlportinclude=""
    if test x$stlport_prefix != x ; then
        if test -d "$stlport_prefix/include/stlport"; then
	    stlportinclude="-I$stlport_prefix/include/stlport"
            LDFLAGS="-L$stlport_prefix/lib $LDFLAGS"
        fi
    else
        if test -d "/usr/include/stlport"; then
            stlportinclude="-I/usr/include/stlport"
        elif test -d "/usr/local/include/stlport"; then
            stlportinclude="-I/usr/local/include/stlport"
        fi
    fi
    if test x$stlportinclude != x ; then
        CPPFLAGS="$stlportinclude $CPPFLAGS"
        AC_MSG_RESULT($stlportinclude)
        AC_CHECK_LIB(stlport, main)
    else
        AC_MSG_RESULT(no)
    fi
fi

dnl standard headers:
dnl =================

AC_CHECK_HEADERS(unistd.h)


dnl do we have getopt() and (optionally) GNU getopt_long()?
dnl =======================================================

AC_CHECK_FUNC(getopt,, AC_MSG_ERROR([Sorry: can't find getopt() function]))
AC_CHECK_HEADER(getopt.h,
	        AC_CHECK_FUNCS(getopt_long))


dnl check if we have GTK >= 1.2.0
dnl =============================

AM_PATH_GTK(1.2.0)

CPPFLAGS="$CPPFLAGS $GTK_CFLAGS"
LDFLAGS="$LDFLAGS $GTK_LDFLAGS"
LIBS="$LIBS $GTK_LIBS"

dnl check for libgdk-pixbuf
dnl =======================

AC_ARG_WITH(gdkpixbuf-prefix,[  --with-gdkpixbuf-prefix=PFX   Prefix where gdk-pixbuf is installed],
            gdkpixbuf_prefix="$withval", gdkpixbuf_prefix="")

if test x"$gdkpixbuf_prefix" != x ; then
	LDFLAGS="-L$gdkpixbuf_prefix/lib $LDFLAGS"
	CPPFLAGS="-I$gdkpixbuf_prefix/include $CPPFLAGS"
fi

RS_CHECK_HEADER(gdk-pixbuf/gdk-pixbuf.h)
RS_CHECK_LIB(gdk_pixbuf, main)

dnl check for libglade
dnl ==================

AC_ARG_WITH(glade-prefix,[  --with-glade-prefix=PFX Prefix where libglade is installed],
            glade_prefix="$withval", glade_prefix="")


if test x"$glade_prefix" != x ; then
	LDFLAGS="-L$glade_prefix/lib $LDFLAGS"
	CPPFLAGS="-I$glade_prefix/include $CPPFLAGS"
fi

RS_CHECK_HEADER(glade/glade.h)
RS_CHECK_LIB(glade, main)


dnl OpenGL/Mesa:
dnl ============

AC_ARG_WITH(gl-prefix,
  [  --with-gl-prefix=PFX    Prefix where OpenGL/Mesa is installed],
  gl_prefix="$withval", gl_prefix="")

dnl libGL/libMesaGL:

if test "x$gl_prefix" != "x" ; then
  CPPFLAGS="$CPPFLAGS -I$gl_prefix/include"
  LDOPTS="$LDOPTS -L$gl_prefix/lib"
fi

AC_CHECK_LIB(GL, glBegin,,
  AC_CHECK_LIB(MesaGL, glBegin,,
    AC_MSG_ERROR([You need OpenGL/Mesa (libGL or libMesaGL)!])))

dnl libGLU/libMesaGLU:

AC_CHECK_LIB(GLU, gluLookAt,,
  AC_CHECK_LIB(MesaGLU, gluLookAt,,
    AC_MSG_ERROR([You need GLU (libGLU or libMesaGLU)!])))


AC_CHECK_HEADERS(GL/gl.h GL/glu.h,,
	         AC_MSG_ERROR([You need the OpenGL header files gl.h & glu.h!]))


dnl GtkGlArea widget.
dnl =================

AC_ARG_WITH(gtkgl-prefix,
  [  --with-gtkgl-prefix=PFX Prefix where GtkGLArea is installed],
  gtkgl_prefix="$withval", gtkgl_prefix="")

if test "x$gtkgl_prefix" != "x" ; then
  CPPFLAGS="$CPPFLAGS -I$gtkgl_prefix/include" 
  LDOPTS="$LDOPTS -L$gtkgl_prefix/lib" 
fi

AC_CHECK_LIB(gtkgl, gtk_gl_area_new,,
  AC_MSG_ERROR([You need GtkGLArea (libgtkgl)!]))

AC_CHECK_HEADERS(gtkgl/gtkglarea.h,,
	         AC_MSG_ERROR([You need the GtkGLArea header file (gtkgl/gtkglarea.h)!]))


AM_MISSING_PROG(HELP2MAN, help2man, $missing_dir)
AM_MISSING_PROG(SED, sed, $missing_dir)

AC_SUBST(CPPFLAGS)

AC_OUTPUT(Makefile
          src/Makefile
          pkgdata/Makefile
          docs/Makefile)
