AC_PREREQ(2.13)
AC_INIT(yaccsrc/degree.h)
AM_INIT_AUTOMAKE(surf, 1.0.0pre1)
CF_VERBOSE

dnl AM_WITH_DMALLOC

AC_ARG_ENABLE(gui,
[  --disable-gui           disable graphical user interface],
	gui="$enableval", gui="yes")

AC_ARG_ENABLE(pthread-test, 
[  --disable-pthread-test  do not determine how to compile multithreaded 
			  programs (You´ll have to specify the necessary 
			  flags)],
	pthread_test="$enableval", pthread_test="yes")



AC_PROG_CC
AC_PROG_CXX
AC_AIX
AC_ISC_POSIX
AC_MINIX
dnl LF_HOST_TYPE

LF_CHECK_CC_FLAG(-Wall -W -Wwrite-strings -Wpointer-arith -Wconversion -Wno-unused -Wstrict-prototypes -Wmissing-prototypes -Wmissing-declarations -Wnested-externs)
RS_CHECK_HAVE_BOOL
LF_CHECK_CXX_FLAG(-fno-rtti -fno-exceptions)
LF_CHECK_CXX_FLAG(-Wall -W -Wwrite-strings -Wpointer-arith -Wconversion -Wno-unused  -Wstrict-prototypes -Wmissing-prototypes -Wmissing-declarations -Woverloaded-virtual -Wnested-externs)
dnl LF_CHECK_CXX_FLAG(-ffast-math -fomit-frame-pointer -fforce-mem)

dnl -finline-functions  -funroll-loops


ICE_CXX_EXPLICIT_TEMPLATE_INSTANTIATION
AC_CXX_FUNCTION_NONTYPE_PARAMETERS
if test "$ac_cv_cxx_function_nontype_parameters" = "no"; then
	AC_MSG_ERROR(["Sorry, your compiler is not smart enough to build surf"])
fi

if test "$pthread_test" = "yes"
then
	AC_CANONICAL_HOST
	case "$host_os" in
		*irix* | *linux* |*solaris*) try_threads="linux";;
		*freebsd*)	try_threads="freebsd";;
		*)		try_threads="other"; AC_MSG_WARN([Unknown os $host_os. Maybe it´s better to configure with --disable-pthread-test]);;
	esac
fi

if test "$try_threads" = "linux"
then
	AC_CHECK_LIB(pthread, pthread_create,[LIBS="-lpthread $LIBS"], AC_MSG_ERROR("Sorry: can´t link with pthread library"))

	CPPFLAGS="$CPPFLAGS -D_REENTRANT"
fi

if test "$try_threads" = "freebsd"
then
	CPPFLAGS="$CPPFLAGS -pthread"
	LDFLAGS="$LDFLAGS -pthread"
	RS_CHECK_PTHREADS
fi

#if test "$try_threads" = "freebsd"
#then
#fi

AC_CHECK_HEADER(pthread.h,,"Sorry: Can´t find header file pthread.h")


AC_HEADER_STDC

dnl check for some c++ headers
AC_LANG_SAVE
AC_LANG_CPLUSPLUS
AC_CHECK_HEADER(iostream.h,,"Sorry: Can´t find header file iostream.h")
AC_CHECK_HEADER(strstream.h,,"Sorry: Can´t find header file strstream.h")
AC_LANG_RESTORE


AM_PROG_LEX
AC_PROG_YACC
AC_PROG_RANLIB
AC_PROG_INSTALL

RS_CHECK_PTHREADS

dnl ----------------------------------------------------------------------
dnl --- CHECK FOR GETHOSTNAME PROTOTYPE IN UNISTD.H
dnl ---

AC_CACHE_CHECK(whether there is a prototype for gethostname in unistd.h,
ac_cv_gethostname_has_prototype,
AC_EGREP_HEADER(gethostname, unistd.h,
		ac_cv_gethostname_has_prototype=yes,
		ac_cv_gethostname_has_prototype=no))

if test $ac_cv_gethostname_has_prototype = no
then
    AC_DEFINE(NO_GETHOSTNAME_PROTO)
fi
dnl ----------------------------------------------------------------------

dnl	CPPFLAGS="$CPPFLAGS -DUSE_GTK"

if test "$gui" = "yes"
then
AM_PATH_GTK(1.2.0)

CFLAGS="$CFLAGS $GTK_CFLAGS"
CXXFLAGS="$CXXFLAGS $GTK_CFLAGS"


else
	AC_DEFINE(NO_GUI)
fi

AC_PATH_X
AC_PATH_XTRA
CFLAGS="$CFLAGS $X_CFLAGS"
CXXFLAGS="$CXXFLAGS $X_CFLAGS"


AM_CONDITIONAL(GUI, test "x$gui" = "xyes");


RS_CHECK_LIB(m,main)
RS_CHECK_POW()
AC_CHECK_LIB(z,  main, [LIBS="-lz $LIBS"], have_libz="no")
if test "x$have_libz" = "xno"
then
AC_CHECK_LIB(gz, main, [LIBS="-lgz $LIBS"], AC_MSG_ERROR("Can\'t link with -lgz or -lz"))
fi



dnl RS_CHECK_LIB(z,main)


dnl Check for jpeg library and jpeglib.h
dnl ------------------------------------

RS_CHECK_LIB(jpeg,main)
RS_CHECK_HEADER(jpeglib.h)


dnl ----------------------------------------------------------------------
dnl --- CHECK FOR TIFF LIBRARY AND HEADER FILES
dnl --- 	FreeBSD 3.0 has tiff34.so instead of tiff.so and the
dnl --- 	header files are in /usr/local/lib/tiff34
dnl ---		here is the code to check this

TIFF_LIB="no"
AC_CHECK_LIB(tiff, main, [LIBS="-ltiff $LIBS"; TIFF_LIB=""])

if test "$TIFF_LIB" = "no"; then
	AC_CHECK_LIB(tiff34, main,[LIBS="-ltiff34 $LIBS"; TIFF_LIB="34"])
fi

if test "$TIFF_LIB" = "no"; then
	AC_MSG_ERROR("Sorry: can´t link with -ltiff/-ltiff34")
fi





dnl ----------------------------------------------------------------------
dnl --- CHECK FOR GMP LIBRARAY AND HEADER FILES
dnl 

HAVE_GMP="no"
AC_CHECK_LIB(gmp, mpq_sub, [HAVE_GMP=""; LIBS="-lgmp $LIBS"])

if test "$HAVE_GMP" = "no"; then 
	AC_CHECK_LIB(gmp2, mpq_sub, [HAVE_GMP="2"; LIBS="-lgmp2 $LIBS"])
fi

if test "$HAVE_GMP" = "no"; then
	AC_MSG_ERROR("Sorry: can´t find gmp")
fi


dnl test "$HAVE_GMP" = "2" && 	RS_CHECK_HEADER(gmp2/gmp.h)

if test "$HAVE_GMP" = "2"; 
then
	RS_CHECK_HEADER(gmp2/gmp.h)
	AC_DEFINE(GMP2_PREFIX)
else
	RS_CHECK_HEADER(gmp.h)
fi




dnl ----------------------------------------------------------------------
RS_CHECK_HEADER(pthread.h)






dnl ----------------------------------------------------------------------
dnl --- CHECK FOR TIFF LIBRARY HEADER FILES
dnl ---
dnl ---    	Suse puts tiffio.h/tiff.h in /usr/X11R6/include
dnl --- 	We need the "extended" CPPFLAGS to find these headers

SAVE_CPPFLAGS="$CPPFLAGS"
CPPFLAGS="$CPPFLAGS $X_CFLAGS"

TIFF_HEADER="no"
if test "$TIFF_LIB" = "34"
then
	AC_CHECK_HEADER(tiff34/tiffio.h, TIFF_HEADER="34")
fi

if test "$TIFF_HEADER" = "no"
then
	AC_CHECK_HEADER(tiffio.h,TIFF_HEADER="")
fi

if test "$TIFF_HEADER" = "34"
then
	AC_DEFINE(TIFF_HEADER_34)
fi

if test "$TIFF_HEADER" = "no" 
then
	AC_MSG_ERROR("Sorry: can´t find tiff library header file tiffio.h")
fi

CPPFLAGS="$SAVE_CPPFLAGS"

dnl ----------------------------------------------------------------------


if test "$rs_cv_have_bool" = "no"
then
	AC_DEFINE(bool, int)
	AC_DEFINE(true, 1)
	AC_DEFINE(false,0)
fi



dnl is there a another way to quote this...sometimes 
dnl sometimes "/bin/sh ./config.status --recheck" complains
dnl about a non working c compiler 

CPPFLAGS="$CPPFLAGS -DDATADIR=\\\"$datadir\\\""

AC_OUTPUT(	Makefile
		src/Makefile
		image-formats/Makefile
		drawfunc/Makefile
		yaccsrc/Makefile
		curve/Makefile
		mt/Makefile
		draw/Makefile
		misc/Makefile
		debug/Makefile
		gtkgui/Makefile
		dither/Makefile
	 )
