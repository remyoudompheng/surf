dnl ---------------------
dnl configure.in for surf
dnl ---------------------

AC_PREREQ(2.13)
AC_INIT(src/main.cc)
AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(surf, 1.1.0)
CF_VERBOSE


dnl some standard checks:
dnl ---------------------

AC_PROG_CC
AC_PROG_CXX
AC_AIX
AC_ISC_POSIX
AC_MINIX
AC_HEADER_STDC
AM_PROG_LEX
AC_PROG_YACC
AC_PROG_RANLIB


dnl check if C++ compiler really works:
dnl -----------------------------------

AC_LANG_SAVE
AC_LANG_CPLUSPLUS

AC_CXX_FUNCTION_NONTYPE_PARAMETERS
if test "$ac_cv_cxx_function_nontype_parameters" = "no"; then
	AC_MSG_ERROR(["Sorry, your compiler is not smart enough to build surf"])
fi

ICE_CXX_EXPLICIT_TEMPLATE_INSTANTIATION

JOJO_CXX_WARNINGS
JOJO_CXX_NAMESPACES
JOJO_CXX_STDNAMESPACE

AC_LANG_RESTORE

if test "$GCC" = "no" ; then
	case `uname` in
	IRIX*)
		CXXFLAGS="-LANG:std $CXXFLAGS"
		;;
	esac
fi


dnl include /usr/local/lib and /usr/local/include in search paths:
dnl --------------------------------------------------------------

if test -d "/usr/local/lib/"; then
	LDFLAGS="-L/usr/local/lib/ $LDFLAGS"
fi
if test -d "/usr/local/include/"; then
	CPPFLAGS="-I/usr/local/include/ $CPPFLAGS"
fi

dnl check for STLport:
dnl ------------------

AC_ARG_WITH(stlport-prefix,[  --with-stlport-prefix=PFX Prefix where STLport is installed (optional)],
            stlport_prefix="$withval", stlport_prefix="")
AC_ARG_ENABLE(stlport, [  --disable-stlport       Do not try to find STLport includes and library],
                    , enable_stlport=yes)

if test "x$enable_stlport" = "xyes" ; then
    AC_MSG_CHECKING(for STLport includes)
    stlportinclude=""
    if test x$stlport_prefix != x ; then
        if test -d "$stlport_prefix/include/stlport"; then
	    stlportinclude="-I$stlport_prefix/include/stlport"
            LDFLAGS="-L$stlport_prefix/lib $LDFLAGS"
        fi
    else
        if test -d "/usr/include/stlport"; then
            stlportinclude="-I/usr/include/stlport"
        elif test -d "/usr/local/include/stlport"; then
            stlportinclude="-I/usr/local/include/stlport"
        fi
    fi
    if test x$stlportinclude != x ; then
        CPPFLAGS="$stlportinclude $CPPFLAGS"
        AC_MSG_RESULT($stlportinclude)
        AC_CHECK_LIB(stlport, main)
    else
        AC_MSG_RESULT(no)
    fi
fi

dnl checks for header files:
dnl ------------------------

AC_CHECK_HEADERS(unistd.h stdint.h)


dnl check options:
dnl --------------


dnl do we have getopt() and (optionally) GNU getopt_long()?

AC_CHECK_FUNC(getopt,, AC_MSG_ERROR([Sorry: can't find getopt() function]))
AC_CHECK_HEADER(getopt.h, AC_CHECK_FUNCS(getopt_long))

dnl check for gethostname prototype in unistd.h:

AC_CHECK_HEADERS(unistd.h stdint.h)

AC_CACHE_CHECK(whether there's a gethostname prototype in unistd.h,
               ac_cv_gethostname_has_prototype,
               AC_EGREP_HEADER(gethostname, unistd.h,
	                       ac_cv_gethostname_has_prototype=yes,
 	                       ac_cv_gethostname_has_prototype=no
                               AC_DEFINE(NO_GETHOSTNAME_PROTO)))


dnl math lib and (g)zlib:
dnl ---------------------

RS_CHECK_LIB(m, main)
AC_CHECK_LIB(z,  main,,
	     AC_CHECK_LIB(gz, main,,
                          AC_MSG_ERROR([Sorry: Can't find libz/libgz.])))


dnl checks for image libraries (optional):
dnl --------------------------------------

dnl JPEG library and jpeglib.h:

AC_CHECK_HEADER(jpeglib.h,
	        AC_CHECK_LIB(jpeg, main))

dnl PNG library and png.h

AC_CHECK_HEADER(png.h,
	        AC_CHECK_LIB(png, png_set_rows))

dnl tiff library and header file:

tifflibfound="no"
AC_CHECK_HEADER(tiffio.h,
	        AC_CHECK_LIB(tiff, main,
	                     tifflibfound="yes"
			     AC_DEFINE(HAVE_LIBTIFF)
			     LIBS="$LIBS -ltiff"))

if test "$libtifffound" = "no"
then
dnl (FreeBSD 3.0 has tiff34.so instead of tiff.so and the header files
dnl are in /usr/local/lib/tiff34)
  AC_CHECK_HEADER(tiff34/tiffio.h,
                  AC_CHECK_LIB(tiff34, main,
	                       AC_DEFINE(TIFF_HEADER_34)
		               AC_DEFINE(HAVE_LIBTIFF)
			       LIBS="$LIBS -ltiff34"))
fi

	
dnl check for gmp:
dnl --------------

AC_ARG_WITH(gmp-prefix,[  --with-gmp-prefix=PFX   Prefix where GMP is installed],
            gmp_prefix="$withval", gmp_prefix="")


if test x"$gmp_prefix" != x ; then
	LDFLAGS="-L$gmp_prefix/lib $LDFLAGS"
	CPPFLAGS="-I$gmp_prefix/include $CPPFLAGS"
fi

AC_CHECK_HEADER(gmp.h,,
		AC_CHECK_HEADER(gmp2/gmp.h,
				AC_DEFINE(GMP2_PREFIX),
				AC_MSG_ERROR([Sorry: can't find header file gmp.h])))

AC_CHECK_LIB(gmp, main,,
             AC_CHECK_LIB(gmp2, main,,
			  AC_MSG_ERROR([Sorry: can't find gmp])))

dnl check for GTS:
dnl --------------

AC_ARG_WITH(gts-prefix,[  --with-gts-prefix=PFX   Prefix where GTS is installed],
            gts_prefix="$withval", gts_prefix="")
AC_ARG_ENABLE(gts, [  --disable-gts           Do not try to find GTS includes and library],
                    , enable_gts=yes)

if test "x$enable_gts" = "xyes" ; then
    if test x"$gts_prefix" != x ; then
	LDFLAGS="-L$gts_prefix/lib $LDFLAGS"
	CPPFLAGS="-I$gts_prefix/include $CPPFLAGS"
    fi

    dnl GTS needs glib..:
    echo "**** If the following test for GLIB fails you may want to install GTS"
    echo "**** (and GLIB) or re-run configure with the --disable-gts option."
    echo "**** However, without GTS you won't be able to use the triangulation"
    echo "**** feature of surf!"

    AM_PATH_GLIB(1.2.0)
    LIBS="$LIBS $GLIB_LIBS"
    CPPFLAGS="$CPPFLAGS $GLIB_CFLAGS"

    AC_CHECK_HEADER(gts.h,
      AC_CHECK_LIB(gts, main,
        AC_DEFINE(HAVE_LIBGTS)
         LIBS="$LIBS -lgts",
        AC_MSG_ERROR([Couldn't find libgts. Please install GTS or try --disable-gts.])),
      AC_MSG_ERROR([Couldn't find gts.h. Please install GTS or try --diable-gts.]))
fi



dnl link with lex-libaray:
dnl ----------------------

LIBS="$LIBS $LEXLIB"

AC_SUBST(CPPFLAGS)

AM_MISSING_PROG(HELP2MAN, help2man, $missing_dir)
AM_MISSING_PROG(SED, sed, $missing_dir)

AC_OUTPUT(Makefile
          docs/Makefile
          src/Makefile
	  image-formats/Makefile
	  drawfunc/Makefile
	  yaccsrc/Makefile
	  curve/Makefile
	  draw/Makefile
	  misc/Makefile
	  debug/Makefile
	  dither/Makefile
          triangulator/Makefile)

